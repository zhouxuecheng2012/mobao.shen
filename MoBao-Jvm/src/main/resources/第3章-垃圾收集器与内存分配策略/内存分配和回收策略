http://blog.csdn.net/yangzl2008/article/details/43202969

Java中的逃逸分析和TLAB(Thread Local Allocation Buffer)以及Java对象分配不在heap
对象不在堆上分配主要的原因还是堆是共享的，在堆上分配有锁的开销。
无论是TLAB还是栈都是线程私有的，私有即避免了竞争.

1. 逃逸分析
逃逸分析，是一种可以有效减少Java 程序中同步负载和内存堆分配压力的跨函数全局数据流分析算法。

在计算机语言编译器优化原理中，逃逸分析是指分析指针动态范围的方法，它同编译器优化原理的指针分析和外形
分析相关联。当变量（或者对象）在方法中分配后，其指针有可能被返回或者被全局引用，
这样就会被其他过程或者线程所引用，这种现象称作指针（或者引用）的逃逸(Escape)。

Java的 HotSpot JIT编译器，能够在方法重载或者动态加载代码的时候对代码进行逃逸分析，
同时Java对象在堆上分配和内置线程的特点使得逃逸分析成Java的重要功能。











