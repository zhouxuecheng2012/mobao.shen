Facade（外观）模式为子系统中的各类（或结构与方法）提供一个简明一致的界面,隐藏子系统的复杂性,
使子系统更加容易使用。
我们还可能采用这样一种策略：重新进行类的设计,将原来分散在源码中的类/结构及方法重新组合,
形成新的、统一的接口,供上层应用使用。
这在某种意义上与Adapter及Proxy有类似之处，但是，
Proxy（代理）注重在为Client-Subject提供一个访问的中间层，如CORBA可为应
用程序提供透明访问支持，使应用程序无需去考虑平台及网络造成的差异及其它诸多技术细节；
Adapter（适配器）注重对接口的转换与调整；



