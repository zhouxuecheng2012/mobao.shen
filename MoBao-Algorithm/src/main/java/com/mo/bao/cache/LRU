
http://flychao88.iteye.com/blog/1977653

1:如果你去看LinkedHashMap的源码可知，LRU算法是通过双向链表来实现，当某个位置被命中，
通过调整链表的指向将该位置调整到头位置，新加入的内容直接放在链表头，如此一来，最近被命中的内容就向链表头移动，
需要替换时，链表最后的位置就是最近最少使用的位置。

2:基于双链表 的LRU实现:
传统意义的LRU算法是为每一个Cache对象设置一个计数器，每次Cache命中则给计数器+1，而Cache用完，需要淘汰旧内容，
放置新内容时，就查看所有的计数器，并将最少使用的内容替换掉。



http://www.cnblogs.com/iamsupercp/archive/2014/03/26/3625194.html


